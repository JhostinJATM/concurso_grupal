# Generated by Django 5.2.4 on 2025-07-31 15:16

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cajon',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora de última actualización')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si el registro está activo')),
                ('nombre', models.CharField(help_text='Nombre único del cajón', max_length=100, unique=True, validators=[django.core.validators.RegexValidator(message='Solo se permiten letras, números y espacios', regex='^[a-zA-Z0-9\\s]+$')])),
                ('capacidad_maxima', models.PositiveIntegerField(help_text='Capacidad máxima de objetos que puede contener el cajón', validators=[django.core.validators.MinValueValidator(1, message='La capacidad debe ser al menos 1'), django.core.validators.MaxValueValidator(1000, message='La capacidad no puede exceder 1000')])),
                ('ubicacion', models.CharField(blank=True, help_text='Ubicación física del cajón', max_length=200, null=True)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción adicional del cajón', null=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='Usuario que creó el registro', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='Usuario que actualizó el registro por última vez', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('usuario', models.ForeignKey(help_text='Usuario propietario del cajón', on_delete=django.db.models.deletion.CASCADE, related_name='cajones', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cajón',
                'verbose_name_plural': 'Cajones',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Objeto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora de última actualización')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si el registro está activo')),
                ('nombre', models.CharField(help_text='Nombre del objeto', max_length=100)),
                ('tipo_objeto', models.CharField(choices=[('ROPA', 'Ropa'), ('PAPELERIA', 'Papelería'), ('CABLES', 'Cables'), ('ELECTRONICA', 'Electrónica'), ('LIBROS', 'Libros'), ('HERRAMIENTAS', 'Herramientas'), ('COCINA', 'Artículos de Cocina'), ('OTROS', 'Otros')], default='OTROS', help_text='Tipo de objeto', max_length=20)),
                ('tamanio', models.CharField(choices=[('PEQUENO', 'Pequeño'), ('MEDIANO', 'Mediano'), ('GRANDE', 'Grande')], default='MEDIANO', help_text='Tamaño del objeto', max_length=10)),
                ('codigo', models.CharField(blank=True, help_text='Código único del objeto', max_length=50, unique=True)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción detallada del objeto', null=True)),
                ('fecha_ingreso', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora de ingreso al cajón')),
                ('peso', models.DecimalField(blank=True, decimal_places=2, help_text='Peso del objeto en gramos', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.01, message='El peso debe ser mayor que 0')])),
                ('cajon', models.ForeignKey(help_text='Cajón donde se almacena el objeto', on_delete=django.db.models.deletion.CASCADE, related_name='objetos', to='cajones_inteligentes.cajon')),
                ('created_by', models.ForeignKey(blank=True, help_text='Usuario que creó el registro', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='Usuario que actualizó el registro por última vez', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Objeto',
                'verbose_name_plural': 'Objetos',
                'ordering': ['-fecha_ingreso'],
            },
        ),
        migrations.CreateModel(
            name='Historial',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora de última actualización')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si el registro está activo')),
                ('nombre', models.CharField(help_text='Nombre descriptivo de la acción', max_length=200)),
                ('motivo', models.TextField(help_text='Motivo o descripción detallada de la acción')),
                ('tipo_accion', models.CharField(choices=[('CREAR', 'Crear'), ('MODIFICAR', 'Modificar'), ('ELIMINAR', 'Eliminar'), ('CONSULTAR', 'Consultar'), ('MOVER', 'Mover')], default='CREAR', help_text='Tipo de acción realizada', max_length=50)),
                ('cajon', models.ForeignKey(blank=True, help_text='Cajón relacionado con la acción (opcional)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='historial', to='cajones_inteligentes.cajon')),
                ('usuario', models.ForeignKey(help_text='Usuario que realizó la acción', on_delete=django.db.models.deletion.CASCADE, related_name='historial', to=settings.AUTH_USER_MODEL)),
                ('objeto', models.ForeignKey(blank=True, help_text='Objeto relacionado con la acción (opcional)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='historial', to='cajones_inteligentes.objeto')),
            ],
            options={
                'verbose_name': 'Historial',
                'verbose_name_plural': 'Historiales',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Recomendacion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora de última actualización')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si el registro está activo')),
                ('nombre', models.CharField(help_text='Título de la recomendación', max_length=200)),
                ('descripcion', models.TextField(help_text='Descripción detallada de la recomendación')),
                ('fecha_creacion', models.DateField(auto_now_add=True, help_text='Fecha de creación de la recomendación')),
                ('prioridad', models.CharField(choices=[('BAJA', 'Baja'), ('MEDIA', 'Media'), ('ALTA', 'Alta'), ('CRITICA', 'Crítica')], default='MEDIA', help_text='Prioridad de la recomendación', max_length=10)),
                ('tipo_recomendacion', models.CharField(choices=[('ORGANIZACION', 'Organización'), ('ESPACIO', 'Optimización de Espacio'), ('MANTENIMIENTO', 'Mantenimiento'), ('SEGURIDAD', 'Seguridad'), ('EFICIENCIA', 'Eficiencia')], default='ORGANIZACION', help_text='Tipo de recomendación', max_length=20)),
                ('implementada', models.BooleanField(default=False, help_text='Indica si la recomendación ha sido implementada')),
                ('fecha_implementacion', models.DateTimeField(blank=True, help_text='Fecha en que se implementó la recomendación', null=True)),
                ('usuario', models.ForeignKey(help_text='Usuario destinatario de la recomendación', on_delete=django.db.models.deletion.CASCADE, related_name='recomendaciones', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Recomendación',
                'verbose_name_plural': 'Recomendaciones',
                'ordering': ['-fecha_creacion', '-prioridad'],
            },
        ),
        migrations.AddIndex(
            model_name='cajon',
            index=models.Index(fields=['usuario', 'nombre'], name='cajones_int_usuario_0284b4_idx'),
        ),
        migrations.AddIndex(
            model_name='cajon',
            index=models.Index(fields=['capacidad_maxima'], name='cajones_int_capacid_b7cbfd_idx'),
        ),
        migrations.AddIndex(
            model_name='objeto',
            index=models.Index(fields=['cajon', 'tipo_objeto'], name='cajones_int_cajon_i_e1201c_idx'),
        ),
        migrations.AddIndex(
            model_name='objeto',
            index=models.Index(fields=['codigo'], name='cajones_int_codigo_3b833e_idx'),
        ),
        migrations.AddIndex(
            model_name='objeto',
            index=models.Index(fields=['nombre'], name='cajones_int_nombre_4cf257_idx'),
        ),
        migrations.AddIndex(
            model_name='historial',
            index=models.Index(fields=['usuario', '-created_at'], name='cajones_int_usuario_58954c_idx'),
        ),
        migrations.AddIndex(
            model_name='historial',
            index=models.Index(fields=['tipo_accion'], name='cajones_int_tipo_ac_c68bf6_idx'),
        ),
        migrations.AddIndex(
            model_name='recomendacion',
            index=models.Index(fields=['usuario', '-fecha_creacion'], name='cajones_int_usuario_41250f_idx'),
        ),
        migrations.AddIndex(
            model_name='recomendacion',
            index=models.Index(fields=['prioridad'], name='cajones_int_priorid_607b4d_idx'),
        ),
        migrations.AddIndex(
            model_name='recomendacion',
            index=models.Index(fields=['implementada'], name='cajones_int_impleme_d491a5_idx'),
        ),
    ]
